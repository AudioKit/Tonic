import Foundation

extension Chord {
    public static var C = Chord(.C, type: .majorTriad)
    public static var D = Chord(.D, type: .majorTriad)
    public static var E = Chord(.E, type: .majorTriad)
    public static var F = Chord(.F, type: .majorTriad)
    public static var G = Chord(.G, type: .majorTriad)
    public static var A = Chord(.A, type: .majorTriad)
    public static var B = Chord(.B, type: .majorTriad)

    public static var Cm = Chord(.C, type: .minorTriad)
    public static var Dm = Chord(.D, type: .minorTriad)
    public static var Em = Chord(.E, type: .minorTriad)
    public static var Fm = Chord(.F, type: .minorTriad)
    public static var Gm = Chord(.G, type: .minorTriad)
    public static var Am = Chord(.A, type: .minorTriad)
    public static var Bm = Chord(.B, type: .minorTriad)

    public static var Cdim = Chord(.C, type: .diminishedTriad)
    public static var Ddim = Chord(.D, type: .diminishedTriad)
    public static var Edim = Chord(.E, type: .diminishedTriad)
    public static var Fdim = Chord(.F, type: .diminishedTriad)
    public static var Gdim = Chord(.G, type: .diminishedTriad)
    public static var Adim = Chord(.A, type: .diminishedTriad)
    public static var Bdim = Chord(.B, type: .diminishedTriad)

    public static var Caug = Chord(.C, type: .augmentedTriad)
    public static var Daug = Chord(.D, type: .augmentedTriad)
    public static var Eaug = Chord(.E, type: .augmentedTriad)
    public static var Faug = Chord(.F, type: .augmentedTriad)
    public static var Gaug = Chord(.G, type: .augmentedTriad)
    public static var Aaug = Chord(.A, type: .augmentedTriad)
    public static var Baug = Chord(.B, type: .augmentedTriad)

    public static var Csus = Chord(.C, type: .suspendedTriad)
    public static var Dsus = Chord(.D, type: .suspendedTriad)
    public static var Esus = Chord(.E, type: .suspendedTriad)
    public static var Fsus = Chord(.F, type: .suspendedTriad)
    public static var Gsus = Chord(.G, type: .suspendedTriad)
    public static var Asus = Chord(.A, type: .suspendedTriad)
    public static var Bsus = Chord(.B, type: .suspendedTriad)

    public static var Cs = Chord(.Cs, type: .majorTriad)
    public static var Ds = Chord(.Ds, type: .majorTriad)
    public static var Es = Chord(.Es, type: .majorTriad)
    public static var Fs = Chord(.Fs, type: .majorTriad)
    public static var Gs = Chord(.Gs, type: .majorTriad)
    public static var As = Chord(.As, type: .majorTriad)
    public static var Bs = Chord(.Bs, type: .majorTriad)

    public static var Csm = Chord(.Cs, type: .minorTriad)
    public static var Dsm = Chord(.Ds, type: .minorTriad)
    public static var Esm = Chord(.Es, type: .minorTriad)
    public static var Fsm = Chord(.Fs, type: .minorTriad)
    public static var Gsm = Chord(.Gs, type: .minorTriad)
    public static var Asm = Chord(.As, type: .minorTriad)
    public static var Bsm = Chord(.Bs, type: .minorTriad)

    public static var Csdim = Chord(.Cs, type: .diminishedTriad)
    public static var Dsdim = Chord(.Ds, type: .diminishedTriad)
    public static var Esdim = Chord(.Es, type: .diminishedTriad)
    public static var Fsdim = Chord(.Fs, type: .diminishedTriad)
    public static var Gsdim = Chord(.Gs, type: .diminishedTriad)
    public static var Asdim = Chord(.As, type: .diminishedTriad)
    public static var Bsdim = Chord(.Bs, type: .diminishedTriad)

    public static var Cssus = Chord(.Cs, type: .suspendedTriad)
    public static var Dssus = Chord(.Ds, type: .suspendedTriad)
    public static var Essus = Chord(.Es, type: .suspendedTriad)
    public static var Fssus = Chord(.Fs, type: .suspendedTriad)
    public static var Gssus = Chord(.Gs, type: .suspendedTriad)
    public static var Assus = Chord(.As, type: .suspendedTriad)
    public static var Bssus = Chord(.Bs, type: .suspendedTriad)

    public static var Cb = Chord(.Cb, type: .majorTriad)
    public static var Db = Chord(.Db, type: .majorTriad)
    public static var Eb = Chord(.Eb, type: .majorTriad)
    public static var Fb = Chord(.Fb, type: .majorTriad)
    public static var Gb = Chord(.Gb, type: .majorTriad)
    public static var Ab = Chord(.Ab, type: .majorTriad)
    public static var Bb = Chord(.Bb, type: .majorTriad)

    public static var Cbm = Chord(.Cb, type: .minorTriad)
    public static var Dbm = Chord(.Db, type: .minorTriad)
    public static var Ebm = Chord(.Eb, type: .minorTriad)
    public static var Fbm = Chord(.Fb, type: .minorTriad)
    public static var Gbm = Chord(.Gb, type: .minorTriad)
    public static var Abm = Chord(.Ab, type: .minorTriad)
    public static var Bbm = Chord(.Bb, type: .minorTriad)

    public static var Cbdim = Chord(.Cb, type: .diminishedTriad)
    public static var Dbdim = Chord(.Db, type: .diminishedTriad)
    public static var Ebdim = Chord(.Eb, type: .diminishedTriad)
    public static var Fbdim = Chord(.Fb, type: .diminishedTriad)
    public static var Gbdim = Chord(.Gb, type: .diminishedTriad)
    public static var Abdim = Chord(.Ab, type: .diminishedTriad)
    public static var Bbdim = Chord(.Bb, type: .diminishedTriad)

    public static var Cbsus = Chord(.Cb, type: .suspendedTriad)
    public static var Dbsus = Chord(.Db, type: .suspendedTriad)
    public static var Ebsus = Chord(.Eb, type: .suspendedTriad)
    public static var Fbsus = Chord(.Fb, type: .suspendedTriad)
    public static var Gbsus = Chord(.Gb, type: .suspendedTriad)
    public static var Absus = Chord(.Ab, type: .suspendedTriad)
    public static var Bbsus = Chord(.Bb, type: .suspendedTriad)
}
